import com.liferay.gradle.plugins.gulp.ExecuteGulpTask
import com.liferay.gradle.util.FileUtil
import groovy.json.JsonBuilder

ext {
	liferayHome="${project.rootDir}/../bundles"
	appServerDir="${liferayHome}/tomcat-7.0.62"
	deployDir="${liferayHome}/osgi/modules"
}

buildscript {
	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins", version: "1.0.47+"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.gulp", version: "1.0.0+"
	}

	repositories {
		mavenLocal()

		maven {
			url "http://cdn.repository.liferay.com/nexus/content/groups/public"
		}
	}
}

repositories {
	mavenLocal()

	maven {
		url "http://cdn.repository.liferay.com/nexus/content/groups/public"
	}

	maven {
		url "http://106.187.96.36/gamerson/liferay-workspace-repo/"
	}
}

configurations {
	bundle
}


dependencies {
	bundle group: "com.liferay", name: "portal-tomcat-bundle", version: "7.0-ce-a5-20151209121227541"
}


task buildBundle(dependsOn: [configurations.bundle]) << {
	def unzipDir = new File("${rootDir}/build/bundleTmp/")

	copy {
		configurations.bundle.asFileTree.each {
			from( zipTree(it) )
		}
		into unzipDir
	}

	copy {
		from unzipDir.listFiles()[0]
		into file("${rootDir}/build/bundle/")
	}

	delete unzipDir

	copy {
		from file("${rootDir}/build/dist/")
		into file("${rootDir}/build/bundle/deploy/")
	}
}

task dist(type: Zip, dependsOn: 'buildBundle') {
	from file("${rootDir}/build/bundle")
	destinationDir file("${rootDir}/build/distBundle")
	archiveName "bundle.zip"
}

configure(subprojects.findAll {FileUtil.exists(it, "bnd.bnd")}) {
	repositories {
		maven {
			url "http://cdn.repository.liferay.com/nexus/content/groups/public"
		}
	}

	apply plugin: "com.liferay.plugin"

	jar << {
		copy {
			from jar.archivePath
			into "${rootDir}/build/dist"
		}
	}
}

configure(subprojects.findAll {FileUtil.exists(it, "gulpfile.js")}) {
	apply plugin: "com.liferay.gulp"

	buildDir = file("build_gradle")

	tasks.withType(ExecuteGulpTask) {
		dependsOn npmInstall
		dependsOn createLiferayThemeJson
	}

	task build(type: Copy, dependsOn: 'gulpBuild') {
		from 'dist'
		into "${rootDir}/build/dist"
	}

	task clean(type: Delete) {
		delete buildDir, 'dist', 'node_modules'
	}

	task createLiferayThemeJson {
		File liferayThemeJsonFile = file("liferay-theme.json")

		doLast {
			JsonBuilder jsonBuilder = new JsonBuilder()

			jsonBuilder.LiferayTheme {
				appServerPath appServerDir
				appServerPathTheme "${appServerDir}/webapps/${project.name}"
				deployed true
				deployPath deployDir
				themeName project.name
			}

			liferayThemeJsonFile.text = jsonBuilder
		}

		onlyIf {
			!liferayThemeJsonFile.exists()
		}
	}

	task deploy(dependsOn: 'gulpDeploy')
}

File pluginsSdk = file("plugins-sdk")

if (pluginsSdk.exists()) {
	configure(project(':plugins-sdk')) {
		ant.importBuild 'build.xml'

		task build(type: Copy, dependsOn: 'war') {
			from 'dist'
			into "${rootDir}/build/dist"
		}
	}
}
